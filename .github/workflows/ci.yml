name: Continuous Integration
on: 
  push:
    branches:
     - tf2
  pull_request:
    branches:
     - tf2

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        include:
          - os: windows-2019
            os_short: win
            compiler_cc: msvc
          - os: ubuntu-20.04
            os_short: linux
            compiler_cc: clang-8
            compiler_cxx: clang++-8
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.compiler_cc }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev ${{ matrix.compiler_cc }}

      - uses: actions/setup-python@v5
        name: Setup Python 3.8
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install git+https://github.com/alliedmodders/ambuild

      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux')
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version
      
      - name: Build
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize
          ambuild

      - uses: actions/upload-artifact@v4
        with:
          name: lib-${{ matrix.os_short }}
          path: build/lib/
